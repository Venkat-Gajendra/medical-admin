if (!document.createElement("canvas").getContext) {
  (function () {
    var z = Math;
    var K = z.round;
    var J = z.sin;
    var U = z.cos;
    var b = z.abs;
    var k = z.sqrt;
    var D = 10;
    var F = D / 2;

    function T() {
      return this.context_ || (this.context_ = new W(this));
    }

    function G(i, j, m) {
      var Z = Array.prototype.slice.call(arguments, 2);
      return function () {
        return i.apply(j, Z.concat(Array.prototype.slice.call(arguments)));
      };
    }

    function AD(Z) {
      return String(Z)
        .replace(/&/g, "&amp;")
        .replace(/"/g, "&quot;");
    }

    function r(i) {
      if (!i.namespaces.g_vml_) {
        i.namespaces.add("g_vml_", "urn:schemas-microsoft-com:vml", "#default#VML");
      }
      if (!i.namespaces.g_o_) {
        i.namespaces.add("g_o_", "urn:schemas-microsoft-com:office:office", "#default#VML");
      }
      if (!i.styleSheets.ex_canvas_) {
        var Z = i.createStyleSheet();
        Z.owningElement.id = "ex_canvas_";
        Z.cssText =
          "canvas{display:inline-block;overflow:hidden;text-align:left;width:300px;height:150px}";
      }
    }
    r(document);

    var E = {
      init: function (Z) {
        if (/MSIE/.test(navigator.userAgent) && !window.opera) {
          var i = Z || document;
          i.createElement("canvas");
          i.attachEvent("onreadystatechange", G(this.init_, this, i));
        }
      },
      init_: function (m) {
        var j = m.getElementsByTagName("canvas");
        for (var Z = 0; Z < j.length; Z++) {
          this.initElement(j[Z]);
        }
      },
      initElement: function (i) {
        if (!i.getContext) {
          i.getContext = T;
          r(i.ownerDocument);
          i.innerHTML = "";
          i.attachEvent("onpropertychange", S);
          i.attachEvent("onresize", w);
          var Z = i.attributes;
          if (Z.width && Z.width.specified) {
            i.style.width = Z.width.nodeValue + "px";
          } else {
            i.width = i.clientWidth;
          }
          if (Z.height && Z.height.specified) {
            i.style.height = Z.height.nodeValue + "px";
          } else {
            i.height = i.clientHeight;
          }
        }
        return i;
      },
    };

    function S(i) {
      var Z = i.srcElement;
      switch (i.propertyName) {
        case "width":
          Z.getContext().clearRect();
          Z.style.width = Z.attributes.width.nodeValue + "px";
          Z.firstChild.style.width = Z.clientWidth + "px";
          break;
        case "height":
          Z.getContext().clearRect();
          Z.style.height = Z.attributes.height.nodeValue + "px";
          Z.firstChild.style.height = Z.clientHeight + "px";
          break;
      }
    }

    function w(i) {
      var Z = i.srcElement;
      if (Z.firstChild) {
        Z.firstChild.style.width = Z.clientWidth + "px";
        Z.firstChild.style.height = Z.clientHeight + "px";
      }
    }

    E.init();

    var I = [];
    for (var AC = 0; AC < 16; AC++) {
      for (var AB = 0; AB < 16; AB++) {
        I[AC * 16 + AB] = AC.toString(16) + AB.toString(16);
      }
    }

    function V() {
      return [
        [1, 0, 0],
        [0, 1, 0],
        [0, 0, 1],
      ];
    }

    function d(m, j) {
      var i = V();
      for (var Z = 0; Z < 3; Z++) {
        for (var AF = 0; AF < 3; AF++) {
          var p = 0;
          for (var AE = 0; AE < 3; AE++) {
            p += m[Z][AE] * j[AE][AF];
          }
          i[Z][AF] = p;
        }
      }
      return i;
    }

    function Q(i, Z) {
      Z.fillStyle = i.fillStyle;
      Z.lineCap = i.lineCap;
      Z.lineJoin = i.lineJoin;
      Z.lineWidth = i.lineWidth;
      Z.miterLimit = i.miterLimit;
      Z.shadowBlur = i.shadowBlur;
      Z.shadowColor = i.shadowColor;
      Z.shadowOffsetX = i.shadowOffsetX;
      Z.shadowOffsetY = i.shadowOffsetY;
      Z.strokeStyle = i.strokeStyle;
      Z.globalAlpha = i.globalAlpha;
      Z.font = i.font;
      Z.textAlign = i.textAlign;
      Z.textBaseline = i.textBaseline;
      Z.arcScaleX_ =
